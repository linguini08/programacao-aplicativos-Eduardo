
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package java_projeto_parte2_artur_eeduardo;
import java.util.*;
/**
 *
 * @author Aluno
 */
public class Java_PROJETO_PARTE2_ARTUR_EeDUARDO {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

        Scanner sc = new Scanner(System.in);
        double saldoReais = 100.00;
        double saldoDolares = 0.00;
        final double COTACAO = 5.32;
        LinkedList<String> extrato = new LinkedList<>();
        boolean rodando = true;

        while (rodando) {
            System.out.println();
            System.out.println("✦✦✦ CAIXA RÁPIDO ✦✦✦");
            System.out.println("1 - Saldo");
            System.out.println("2 - Depósito");
            System.out.println("3 - Extrato");
            System.out.println("4 - Simular Empréstimo");
            System.out.println("5 - Comprar Dólar");
            System.out.println("0 - Sair");
            System.out.print("Escolha uma opção: ");
            String opc = sc.nextLine().trim();

            switch (opc) {
                case "1":
                    System.out.printf("Saldo em Reais: R$ %.2f%n", saldoReais);
                    if (saldoDolares > 0.0) {
                        System.out.printf("Saldo em Dólares: US$ %.2f%n", saldoDolares);
                    }
                    if (!continuarOuSair(sc)) rodando = false;
                    break;

                case "2":
                    while (true) {
                        System.out.print("Informe o valor do depósito (R$): ");
                        String entrada = sc.nextLine().trim();
                        double valor;
                        try {
                            valor = Double.parseDouble(entrada.replace(",", "."));
                        } catch (Exception e) {
                            System.out.println("Valor inválido. Digite novamente.");
                            continue;
                        }
                        if (valor <= 0 || valor > 5000) {
                            System.out.println("!!!Valor inválido!!!");
                            System.out.println("O depósito deve ser maior que R$ 0,00 e até R$ 5.000,00. Digite novamente.");
                            continue;
                        }
                        saldoReais += valor;
                        String mov = String.format("DEPÓSITO +R$ %.2f", valor);
                        adicionarExtrato(extrato, mov);
                        System.out.println("Depósito realizado com sucesso!");
                        break;
                    }
                    if (!continuarOuSair(sc)) rodando = false;
                    break;

                case "3":
                    if (extrato.isEmpty()) {
                        System.out.println("Nenhum extrato");
                    } else {
                        System.out.println("Últimas 10 movimentações:");
                        int i = 1;
                        for (String m : extrato) {
                            System.out.printf("%d) %s%n", i++, m);
                        }
                    }
                    if (!continuarOuSair(sc)) rodando = false;
                    break;

                case "4":
                    double valorEmprestimo;
                    while (true) {
                        System.out.print("Informe o valor do empréstimo (R$): ");
                        String e = sc.nextLine().trim();
                        try {
                            valorEmprestimo = Double.parseDouble(e.replace(",", "."));
                        } catch (Exception ex) {
                            System.out.println("Valor inválido. Digite novamente.");
                            continue;
                        }
                        if (valorEmprestimo < 200 || valorEmprestimo > 100000) {
                            System.out.println("O valor do empréstimo deve ser entre R$ 200,00 e R$ 100.000,00.");
                            continue;
                        }
                        break;
                    }

                    double salario;
                    while (true) {
                        System.out.print("Informe o seu salário bruto (R$): ");
                        String s = sc.nextLine().trim();
                        try {
                            salario = Double.parseDouble(s.replace(",", "."));
                        } catch (Exception ex) {
                            System.out.println("Valor inválido. Digite novamente.");
                            continue;
                        }
                        if (salario <= 0) {
                            System.out.println("Salário inválido. Digite novamente.");
                            continue;
                        }
                        break;
                    }

                    List<Integer> parcelasValidas = Arrays.asList(6, 12, 18, 24, 30, 36, 40, 48, 56, 60, 72);
                    int parcelas;
                    while (true) {
                        System.out.print("Quantidade de parcelas (6,12,18,24,30,36,40,48,56,60,72): ");
                        String p = sc.nextLine().trim();
                        try {
                            parcelas = Integer.parseInt(p);
                        } catch (Exception ex) {
                            System.out.println("Entrada inválida. Digite novamente.");
                            continue;
                        }
                        if (!parcelasValidas.contains(parcelas)) {
                            System.out.println("Número de parcelas inválido. Digite novamente.");
                            continue;
                        }
                        break;
                    }

                    double totalComJuros = valorEmprestimo * 1.02;
                    double valorParcela = totalComJuros / parcelas;
                    System.out.printf("Valor da parcela: R$ %.2f x %d%n", valorParcela, parcelas);
                    System.out.printf("Valor do empréstimo: R$ %.2f%n", valorEmprestimo);
                    System.out.printf("Valor total do empréstimo a ser pago: R$ %.2f%n", totalComJuros);

                    if (valorParcela <= salario * 0.30) {
                        String protocolo = gerarProtocolo();
                        System.out.println("Empréstimo disponível!");
                        System.out.println("Entre em contato com a central e informe o número de protocolo " + protocolo + ".");
                    } else {
                        System.out.println("Empréstimo indisponível! O valor da parcela não pode ultrapassar 30% do seu salário bruto.");
                    }
                    if (!continuarOuSair(sc)) rodando = false;
                    break;

                case "5":
                    boolean voltarAoMenu = false;
                    while (true) {
                        System.out.printf("Saldo disponível em Reais: R$ %.2f%n", saldoReais);
                        System.out.print("Quantos dólares deseja comprar (US$): ");
                        String q = sc.nextLine().trim();
                        double qtdDolares;
                        try {
                            qtdDolares = Double.parseDouble(q.replace(",", "."));
                        } catch (Exception ex) {
                            System.out.println("Valor inválido. Digite novamente.");
                            continue;
                        }
                        if (qtdDolares <= 0) {
                            System.out.println("Quantidade inválida. Digite novamente.");
                            continue;
                        }
                        double custo = qtdDolares * COTACAO;
                        System.out.printf("Custo em Reais: R$ %.2f%n", custo);
                        if (custo > saldoReais) {
                            System.out.println("Seu saldo atual é insuficiente.");
                            System.out.print("Deseja simular novamente (R), voltar ao menu (V) ou encerrar o programa (E)? ");
                            String ac = sc.nextLine().trim().toUpperCase();
                            if (ac.equals("R")) {
                                continue;
                            } else if (ac.equals("V")) {
                                voltarAoMenu = true;
                                break;
                            } else {
                                rodando = false;
                                voltarAoMenu = true;
                                break;
                            }
                        } else {
                            System.out.print("Confirmar a compra? (s/n): ");
                            String conf = sc.nextLine().trim().toLowerCase();
                            if (conf.equals("s")) {
                                saldoReais -= custo;
                                saldoDolares += qtdDolares;
                                String mov = String.format("COMPRA DÓLAR -R$ %.2f | +US$ %.2f", custo, qtdDolares);
                                adicionarExtrato(extrato, mov);
                                System.out.println("Compra realizada com sucesso.");
                                System.out.println("Novo saldo:");
                                System.out.printf(" - Reais: R$ %.2f%n", saldoReais);
                                System.out.printf(" - Dólares: US$ %.2f%n", saldoDolares);
                                break;
                            } else {
                                System.out.print("Operação cancelada. Deseja simular novamente (R), voltar ao menu (V) ou encerrar o programa (E)? ");
                                String ac2 = sc.nextLine().trim().toUpperCase();
                                if (ac2.equals("R")) {
                                    continue;
                                } else if (ac2.equals("V")) {
                                    voltarAoMenu = true;
                                    break;
                                } else {
                                    rodando = false;
                                    voltarAoMenu = true;
                                    break;
                                }
                            }
                        }
                    }
                    if (!rodando) break;
                    if (!voltarAoMenu) {
                        if (!continuarOuSair(sc)) rodando = false;
                    }
                    break;

                case "0":
                    System.out.println("Encerrando o atendimento. Obrigado por utilizar o Caixa Rápido.");
                    rodando = false;
                    break;

                default:
                    System.out.println("Opção inválida. Digite novamente.");
            }
        }

        sc.close();
    }

    private static boolean continuarOuSair(Scanner sc) {
        while (true) {
            System.out.print("Deseja voltar ao menu inicial (V) ou encerrar o programa (E)? ");
            String r = sc.nextLine().trim().toUpperCase();
            if (r.equals("V")) return true;
            if (r.equals("E")) return false;
            System.out.println("Entrada inválida. Digite 'V' para voltar ou 'E' para encerrar.");
        }
    }

    private static void adicionarExtrato(LinkedList<String> extrato, String mov) {
        extrato.addFirst(mov);
        if (extrato.size() > 10) extrato.removeLast();
    }

    private static String gerarProtocolo() {
        Random rand = new Random();
        int num = rand.nextInt(90000) + 10000;
        return "EM" + num;
    }
}
    
    

